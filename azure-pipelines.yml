# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  name: almatoolbox-default-linux

#variables:
#- group: smart-city-iot-platform-placeholder

steps:
- task: VariableSetTask@3
  displayName: 'Set JAVA_HOME for maven build'
  inputs:
    variableName: 'JAVA_HOME'
    value: '/usr/lib/jvm/java-8-openjdk-amd64/'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'echo $JAVA_HOME'
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'sonarqube-sicurezza'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'smart-city-iot-platform'
    cliProjectName: 'smart-city-iot-platform'
    cliSources: '.'
    extraProperties: |
      sonar.language=java
      sonar.java.binaries=target
           
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean install -DskipTests -Ddockerfile.skip -Dlicense.skip'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

- task: VariableSetTask@3
  displayName: 'Set JAVA_HOME to Run Code Analysis'
  inputs:
    variableName: 'JAVA_HOME'
    value: '/usr/lib/jvm/java-11-openjdk-amd64/'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'echo $JAVA_HOME'

- task: SonarQubeAnalyze@5
  inputs:
    jdkversion: 'JAVA_HOME'
- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'