# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  name: almatoolbox-default-linux

steps:
#- task: Bash@3
#  inputs:
#    targetType: 'inline'
#    script: 'telnet 10.121.17.40 9000'
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'sonarqube-sicurezza'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'smart-city-iot-platform'
    cliProjectName: 'smart-city-iot-platform'
    cliSources: '.'

- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

#- task: ArtifactoryMaven@2
#  inputs:
#    mavenPomFile: 'pom.xml'
#    goals: 'install'
#    artifactoryResolverService: 'Jfrog-Giotto-IoT'
#    targetResolveReleaseRepo: 'remote-repos'
#    targetResolveSnapshotRepo: 'remote-repos'

- task: SonarQubeAnalyze@5
  inputs:
    jdkversion: 'JAVA_HOME'

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'